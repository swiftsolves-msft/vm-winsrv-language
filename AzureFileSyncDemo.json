{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "metadata": {
                "description": "The Windows version for the VM"
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "afslab.com",
            "metadata": {
              "description": "The FQDN of the Active Directory Domain to be created"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
              "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "https://raw.githubusercontent.com/swiftsolves-msft/Azure-File-Sync-Dive/master/AFSextras"
          },
          "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
              "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
          }      
    },
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'cacendiag')]",
        "storageAccountName2": "[concat(uniquestring(resourceGroup().id), 'uksoudiag')]",
        "nicName": "FS01nic",
        "nicName2": "FS02nic",
        "nicNamead": "ADDCnic",
        "addressPrefix": "10.0.0.0/22",
        "addressPrefix2": "10.0.4.0/22",
        "subnetName": "APP",
        "subnetPrefix": "10.0.0.0/24",
        "subnetPrefix2": "10.0.4.0/24",
        "publicIPAddressName": "FS01-PIP",
        "publicIPAddressName2": "FS02-PIP",
        "publicIPAddressNamead": "ADDC-PIP",
        "vmName": "FS01",
        "vmName2": "FS02",
        "vmNamead": "ADDC",
        "Loc": "canadacentral",
        "Loc2": "uksouth",
        "virtualNetworkName": "VNET-CACEN",
        "virtualNetworkName2": "VNET-UKSOU",
        "vNet1tovNet2PeeringName": "VNET-CACEN-TO-VNET-UKSOU",
        "vNet2tovNet1PeeringName": "VNET-UKSOU-TO-VNET-CACEN",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "subnetRef2": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName2'), variables('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[variables('Loc')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName2')]",
            "apiVersion": "2016-01-01",
            "location": "[variables('Loc2')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[variables('Loc')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(uniquestring(resourceGroup().id), 'fs01pip')]"
                }
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressNamead')]",
            "location": "[variables('Loc')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(uniquestring(resourceGroup().id), 'addcpip')]"
                }
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName2')]",
            "location": "[variables('Loc2')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(uniquestring(resourceGroup().id), 'fs02pip')]"
                }
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('Loc')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                      "10.0.0.200",
                      "8.8.8.8"
                    ]
                  },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2016-06-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet1tovNet2PeeringName')]",
                    "location": "[variables('Loc')]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName2'))]"
                    ],
                    "comments": "This is the peering from vNet 1 to vNet 2",
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "false",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName2'))]"
                        }
                    }
                }
             ]
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName2')]",
            "location": "[variables('Loc2')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix2')]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                      "10.0.0.200",
                      "8.8.8.8"
                    ]
                  },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix2')]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2016-06-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet2tovNet1PeeringName')]",
                    "location": "[variables('Loc2')]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName2'))]"
                    ],
                    "comments": "This is the peering from vNet 1 to vNet 2",
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "false",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
                        }
                    }
                }
             ]
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[variables('Loc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicNamead')]",
            "location": "[variables('Loc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressNamead'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.200",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNamead'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName2')]",
            "location": "[variables('Loc2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName2'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName2'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName2'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef2')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmNamead')]",
            "location": "[variables('Loc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicNamead'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "osProfile": {
                    "computerName": "[variables('vmNamead')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicNamead'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                  "type": "extensions",
                  "name": "CreateADForest",
                  "apiVersion": "2017-03-30",
                  "location": "[resourceGroup().location]",
                  "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', variables('vmNamead'))]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Powershell",
                    "type": "DSC",
                    "typeHandlerVersion": "2.19",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "ModulesUrl": "[concat(parameters('_artifactsLocation'), '/DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken'))]",
                      "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                      "Properties": {
                        "DomainName": "[parameters('domainName')]",
                        "AdminCreds": {
                          "UserName": "[parameters('adminUsername')]",
                          "Password": "PrivateSettingsRef:AdminPassword"
                        }
                      }
                    },
                    "protectedSettings": {
                      "Items": {
                        "AdminPassword": "[parameters('adminPassword')]"
                      }
                    }
                  }
                }
              ]        
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName2')]",
            "location": "[variables('Loc2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName2'))]",
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmNamead'))]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmNamead'),'/extensions/','CreateADForest')]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName2'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "osProfile": {
                    "computerName": "[variables('vmName2')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName2'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                  "type": "extensions",
                  "name": "CustomScriptExtension",
                  "apiVersion": "2017-03-30",
                  "location": "[variables('Loc2')]",
                  "dependsOn": [
                    "[variables('vmName2')]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Compute",
                    "type": "CustomScriptExtension",
                    "typeHandlerVersion": "1.8",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "fileUris": [
                        "https://ctxlabs.blob.core.windows.net/scripts/ADJoin.ps1"
                      ],
                      "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ADJoin.ps1 ', parameters('domainName'), ' ', parameters('adminUsername'), ' ', parameters('adminPassword'))]"
        
                    }
                  }
                }
              ]
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[variables('Loc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmNamead'))]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmNamead'),'/extensions/','CreateADForest')]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                  "type": "extensions",
                  "name": "CustomScriptExtension",
                  "apiVersion": "2017-03-30",
                  "location": "[variables('Loc')]",
                  "dependsOn": [
                    "[variables('vmName')]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Compute",
                    "type": "CustomScriptExtension",
                    "typeHandlerVersion": "1.8",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "fileUris": [
                        "https://ctxlabs.blob.core.windows.net/scripts/ADJoin.ps1"
                      ],
                      "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ADJoin.ps1 ', parameters('domainName'), ' ', parameters('adminUsername'), ' ', parameters('adminPassword'))]"
        
                    }
                  }
                }
              ]
        }
    ],
    "outputs": {
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        }
    }
}